解题报告
一、算法构思及要点
    本题相当于三个“栈”按a,b,c的顺序逐步弹出前面元素的过程，每次弹出后是否继续弹出该栈的下一元素取决于与上一元素等值的元素是否已经在之前已经被弹出，这就需要对弹出的元素做好标记，我觉得这也是本题的要点。我选择建立chosen数组，其下表为弹出元素的值，初始用memset均赋值为0，当有元素e弹出时，标记chosen[e]=1，则当判断chosen[]的值为0时，该栈不继续弹出，指向下一栈。
    在数据结构实现层面，我没用栈，用的是数组，通过设置下标元素的自增，可以达到和栈内元素弹出同样的效果。
    细节方面注意，由于chosen数组元素的秩从1开始，故多开辟一个数组空间。 

二、遇到的问题及解决
    在解决当k为最后选中的元素，chosen数组元素为0的判断条件无法起作用的困境时，在和我室友罗梦龙的交流下，发现chosen数组在建立时应该比n长度+1，因为chosen[0]元素没有利用到。

三、时间和空间复杂度的估算
时间：用一个for循环，且for循环中每一个i值都可以选好一个队员，因此O（n）时间内可以成。memset函数效率也是O（n）量级，总体复杂度为O（n）。
空间：开辟了长度为4个n量级的数组，空间复杂度大致O（n）。

